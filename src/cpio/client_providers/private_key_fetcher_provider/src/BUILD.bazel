# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//src:scp_internal_pkg"])

cc_library(
    name = "private_key_fetcher_provider_select_lib",
    deps = select(
        {
            "//:aws_platform": [
                "//src/cpio/client_providers/private_key_fetcher_provider/src/aws:aws_private_key_fetcher_provider_lib",
            ],
            "//:gcp_platform": [
                "//src/cpio/client_providers/private_key_fetcher_provider/src/gcp:gcp_private_key_fetcher_provider_lib",
            ],
        },
        no_match_error = "Please build for AWS or GCP",
    ),
)

cc_library(
    name = "private_key_fetcher_provider_lib",
    srcs = [
        "private_key_fetcher_provider.cc",
        "private_key_fetcher_provider_utils.cc",
    ],
    hdrs = [
        "error_codes.h",
        "private_key_fetcher_provider.h",
        "private_key_fetcher_provider_utils.h",
    ],
    deps = [
        "//src/core/http2_client/src:http2_client_lib",
        "//src/cpio/client_providers/interface:cpio_client_providers_interface_lib",
        "//src/cpio/client_providers/interface:type_def",
        "//src/public/cpio/interface:cpio_errors",
        "//src/public/cpio/interface/private_key_client:type_def",
        "@com_google_absl//absl/strings",
        "@nlohmann_json//:lib",
    ],
)

cc_test(
    name = "private_key_fetcher_provider_test",
    size = "small",
    srcs = ["private_key_fetcher_provider_test.cc"],
    deps = [
        ":private_key_fetcher_provider_lib",
        "//src/core/async_executor/mock:core_async_executor_mock",
        "//src/core/http2_client/mock:http2_client_mock",
        "//src/core/interface:interface_lib",
        "//src/core/test/utils:utils_lib",
        "//src/cpio/client_providers/private_key_fetcher_provider/mock:private_key_fetcher_provider_mock",
        "//src/public/core/src:test_execution_result_matchers",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "private_key_fetcher_provider_utils_test",
    size = "small",
    srcs = ["private_key_fetcher_provider_utils_test.cc"],
    deps = [
        ":private_key_fetcher_provider_lib",
        "//src/core/async_executor/mock:core_async_executor_mock",
        "//src/core/http2_client/mock:http2_client_mock",
        "//src/core/interface:interface_lib",
        "//src/core/test/utils:utils_lib",
        "//src/cpio/client_providers/private_key_fetcher_provider/mock:private_key_fetcher_provider_mock",
        "//src/public/core/src:test_execution_result_matchers",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)
