# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_test")

package(default_visibility = ["//scp/cc:scp_internal_pkg"])

cc_test(
    name = "async_executor_test",
    size = "small",
    srcs = ["async_executor_test.cc"],
    deps = [
        "//scp/cc/core/async_executor/mock:core_async_executor_mock",
        "//scp/cc/core/async_executor/src:core_async_executor_lib",
        "//scp/cc/core/async_executor/src:error_codes",
        "//scp/cc/core/async_executor/src:typedef",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/public/core/test/interface:execution_result_matchers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "single_thread_async_executor_test",
    size = "small",
    srcs = ["single_thread_async_executor_test.cc"],
    deps = [
        "//scp/cc/core/async_executor/mock:core_async_executor_mock",
        "//scp/cc/core/async_executor/src:error_codes",
        "//scp/cc/core/async_executor/src:single_thread_async_executor",
        "//scp/cc/core/async_executor/src:typedef",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/public/core/test/interface:execution_result_matchers",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "single_thread_priority_async_executor_test",
    size = "small",
    srcs = ["single_thread_priority_async_executor_test.cc"],
    flaky = True,
    deps = [
        "//scp/cc/core/async_executor/mock:core_async_executor_mock",
        "//scp/cc/core/async_executor/src:error_codes",
        "//scp/cc/core/async_executor/src:single_thread_priority_async_executor",
        "//scp/cc/core/async_executor/src:typedef",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/public/core/test/interface:execution_result_matchers",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "async_executor_benchmark_tests",
    size = "small",
    srcs = [
        "single_thread_async_executor_benchmark_test.cc",
    ],
    deps = [
        "//scp/cc/core/async_executor/mock:core_async_executor_mock",
        "//scp/cc/core/async_executor/src:single_thread_priority_async_executor",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/public/core/test/interface:execution_result_matchers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "async_task_test",
    size = "small",
    srcs = ["async_task_test.cc"],
    deps = [
        "//scp/cc/core/async_executor/mock:core_async_executor_mock",
        "//scp/cc/core/async_executor/src:async_task",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "async_executor_utils_test",
    size = "small",
    srcs = ["async_executor_utils_test.cc"],
    deps = [
        "//scp/cc/core/async_executor/src:async_executor_utils",
        "//scp/cc/public/core/test/interface:execution_result_matchers",
        "@com_google_googletest//:gtest_main",
    ],
)
