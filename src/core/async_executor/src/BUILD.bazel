# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//scp/cc/core/async_executor:__subpackages__"])

cc_library(
    name = "core_async_executor_lib",
    srcs = ["async_executor.cc"],
    hdrs = ["async_executor.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":single_thread_async_executor",
        ":single_thread_priority_async_executor",
        "//scp/cc/core/interface:async_context_lib",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/test:core_test_lib",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "typedef",
    hdrs = ["typedef.h"],
)

cc_library(
    name = "error_codes",
    hdrs = ["error_codes.h"],
)

cc_library(
    name = "async_executor_utils",
    hdrs = ["async_executor_utils.h"],
    deps = [
        ":error_codes",
        "//scp/cc/core/common/global_logger/src:global_logger_lib",
    ],
)

cc_library(
    name = "async_task",
    hdrs = ["async_task.h"],
    deps = [
        "//scp/cc/core/interface:interface_lib",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "single_thread_async_executor",
    srcs = ["single_thread_async_executor.cc"],
    hdrs = ["single_thread_async_executor.h"],
    deps = [
        ":async_executor_utils",
        ":async_task",
        ":typedef",
        "//scp/cc/core/common/concurrent_queue/src:concurrent_queue_lib",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "single_thread_priority_async_executor",
    srcs = ["single_thread_priority_async_executor.cc"],
    hdrs = ["single_thread_priority_async_executor.h"],
    deps = [
        ":async_executor_utils",
        ":async_task",
        ":typedef",
        "//scp/cc/core/interface:interface_lib",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/synchronization",
    ],
)
