// This file is @generated by src/roma/tools/api_plugin/tmpl/byob/app/md_cpp_client_sdk.tmpl. Do not edit.
// Version: {{getVersion}}
// Code Generator: {{getRomaGenerator}}

{{- range $file := .Files}}
{{- $file_name := .Name }}
// Generated from: {{$file_name}}
{{- $rpcMsgs := dict }}

//
// See /docs/Guide to the SDK.md for information on using this spec.
//
{{range $svc := $file.Services}}
{{- $svcopts := index $svc.Options "privacysandbox.apis.roma.app_api.v1.roma_svc_annotation"}}
//
// {{$svcopts.RomaAppName}} UDF Spec
//

syntax = "proto3";

package {{$svcopts.CppNamespace | replace "::" "." }};

{{if len $svcopts.CsharpNamespace}}option csharp_namespace = "{{$svcopts.CsharpNamespace}}";{{end}}
{{if len $svcopts.GoPackage}}option go_package = "{{$svcopts.GoPackage}}";{{end}}


{{- range $rpc := $svc.MethodsWithOption "privacysandbox.apis.roma.app_api.v1.roma_rpc_annotation"}}
{{- $rpcopts := index $rpc.Options "privacysandbox.apis.roma.app_api.v1.roma_rpc_annotation"}}
{{- $reqType := $rpc.RequestType }}
{{- $respType := $rpc.ResponseType }}
{{- $reqFullType := $rpc.RequestFullType | printf "proto.%s" }}
{{- $respFullType := $rpc.ResponseFullType | printf "proto.%s" }}

//
// UDF: {{$rpc.Name}}
//   {{$rpcopts.Description | wrapWith 75 "\n//   "}}
// request: {{$reqType}}
{{- range $msg := $file.Messages}}
{{- if eq $msg.LongName $reqType}}
{{- $_ := set $rpcMsgs $reqType $reqType}}
{{- if len $msg.Description}}
// {{$msg.Description | wrapWith 75 "\n// "}}
{{- end}}
message {{$msg.LongName}} {
{{- if $msg.HasFields}}
{{- range $fldNum, $fld := $msg.Fields}}
{{- if len $fld.Description}}
  // {{$fld.Description | wrapWith 75 "\n  // "}}
{{- end}}
  {{if eq $fld.Label "repeated"}}repeated {{end}}{{$fld.LongType}} {{$fld.Name}} = {{add $fldNum 1}};
{{- end}}
{{- end}}{{/*fields*/}}
}
{{- end}}
{{- end}}{{/*messages*/}}

// response: {{$respType}}
{{- range $msg := $file.Messages}}
{{- if eq $msg.LongName $respType}}
{{- $_ := set $rpcMsgs $respType $respType}}
{{- if len $msg.Description}}
// {{$msg.Description | wrapWith 75 "\n// "}}
{{- end}}
message {{$msg.LongName}} {
{{- if $msg.HasFields}}
{{- range $fldNum, $fld := $msg.Fields}}
{{- if len $fld.Description}}
  // {{$fld.Description | wrapWith 75 "\n  // "}}
{{- end}}
  {{if eq $fld.Label "repeated"}}repeated {{end}}{{$fld.LongType}} {{$fld.Name}} = {{add $fldNum 1}};
{{- end}}
{{- end}}{{/*fields*/}}
}
{{- end}}
{{- end}}{{/*messages*/}}

{{- end}}{{/*rpcs*/}}
{{- end}}{{/*services*/}}

{{- if len $file.Messages}}
// Messages

{{- range $msg := $file.Messages}}
{{- if eq (len (get $rpcMsgs $msg.LongName)) 0}}
{{- if len $msg.Description}}
// {{$msg.Description | wrapWith 75 "\n// "}}
{{- end}}
message {{$msg.LongName}} {
{{- if $msg.HasFields}}
{{- range $fldNum, $fld := $msg.Fields}}
{{- if len $fld.Description}}
  // {{$fld.Description | wrapWith 75 "\n  // "}}
{{- end}}
  {{if eq $fld.Label "repeated"}}repeated {{end}}{{$fld.LongType}} {{$fld.Name}} = {{add $fldNum 1}};
{{end}}
{{- end}}{{/*fields*/}}
}
{{end}}
{{- end}}
{{- end}}{{/*messages*/}}

{{- if len $file.Enums}}
// Enums

{{- range $enum := $file.Enums}}
{{- if len $enum.Description}}
  // {{$enum.Description | wrapWith 75 "\n  // "}}
{{- end}}
enum {{$enum.LongName}} {
{{- range $val := .Values}}
{{- if len $val.Description}}
  // {{$val.Description | wrapWith 75 "\n  // "}}
{{- end}}
  {{$val.Name}} = {{$val.Number}};
{{- end}}{{/*vals*/}}
}
{{end}}
{{- end}}{{/*enums*/}}

{{end}}{{/*files*/}}
