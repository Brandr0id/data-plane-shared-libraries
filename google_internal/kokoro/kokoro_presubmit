#!/bin/bash
# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o xtrace
export TZ=Etc/UTC
export PS4='+\t $(basename ${BASH_SOURCE[0]}):${LINENO} ' # xtrace prompt

# shellcheck disable=SC1091
source "$(dirname "$(readlink -f "$0")")"/lib_build.sh

export IMAGE_BUILD_VERBOSE=1
kokoro::configure_build_env

ARCH="$("${WORKSPACE}"/builders/tools/get-architecture)"
readonly ARCH

function _collect_debian_logs() {
  filename="$1"
  printf 'Collecting bazel logs from build-debian [%s]...\n' "${filename}" &>/dev/stderr
  "${WORKSPACE}"/builders/tools/bazel-debian run //:collect-test-logs -- --zip-filename "${filename}"
}

function _cleanup() {
  declare -r -i _status=$?
  declare -r build_logs=presubmit-test-logs.zip
  _collect_debian_logs ${build_logs}
  declare -r -a logfiles=(
    "${build_logs}"
    proxy-debian-"${ARCH}"-test-logs.zip
    proxy-al2023-"${ARCH}"-test-logs.zip
  )
  for lf in "${logfiles[@]}"; do
    kokoro::extract_dist_logs "logs/${lf}" "${lf%-test-logs.zip}"
  done
  exit ${_status}
}
trap _cleanup EXIT

if [[ -v KOKORO_ARTIFACTS_DIR ]]; then
  kokoro::init_perfgate
fi

"${WORKSPACE}"/builders/tools/bazel-debian test //...

"${WORKSPACE}"/scripts/build_proxy

declare -x -r NO_LOCAL_BAZEL
"${WORKSPACE}"/testing/test_import/run-build
