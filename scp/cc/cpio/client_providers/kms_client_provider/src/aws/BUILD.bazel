# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_layer",
)
load("@rules_cc//cc:defs.bzl", "cc_library")
load(
    "@rules_pkg//pkg:mappings.bzl",
    "pkg_attributes",
    "pkg_files",
)
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

package(default_visibility = ["//scp/cc:scp_internal_pkg"])

aws_nitro_enclaves_cli_name = "aws_nitro_enclaves_cli"

alias(
    name = "kms_cli",
    actual = "@nitrokmscli_aws_nitro_enclaves_sdk_c//:{}".format(aws_nitro_enclaves_cli_name),
    visibility = ["//visibility:public"],
)

# copy kms_cli target's output as an opaque executable, simulating a binary
# that's not built from source
copy_file(
    name = "kms_cli_exe",
    src = ":kms_cli",
    out = "kms_cli.exe",
    is_executable = True,
    visibility = ["//visibility:private"],
)

alias(
    name = "libnsm_so",
    actual = "@aws-nitro-enclaves-nsm-api//:nsm",
    visibility = ["//visibility:public"],
)

copy_file(
    name = "libnsm_so_lib",
    src = ":libnsm_so",
    out = "libnsm.so",
    is_executable = False,
    visibility = ["//visibility:private"],
)

sh_test(
    name = "kms_cli_exe_test",
    size = "small",
    srcs = [":kms_cli.exe"],
    args = [
        "decrypt",
        "--help",
    ],
    data = [":libnsm.so"],
    env = {"LD_LIBRARY_PATH": "."},
    tags = [
        "local",  # local precludes remote caching
        "noasan",
    ],
)

pkg_files(
    name = "cpio_kms_executables",
    srcs = [
        ":kms_cli",
    ],
    attributes = pkg_attributes(mode = "0555"),
    prefix = "/cpio/bin",
)

pkg_files(
    name = "cpio_kms_libs",
    srcs = [
        ":libnsm_so",
        "@json_c//:json-c",
    ],
    attributes = pkg_attributes(mode = "0444"),
    prefix = "/cpio/lib",
)

pkg_tar(
    name = "cpio_kms_binaries",
    srcs = [
        ":cpio_kms_executables",
        ":cpio_kms_libs",
    ],
    package_dir = "/",
)

container_layer(
    name = "cpio_kms_layer",
    tars = [
        ":cpio_kms_binaries",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "nontee_aws_kms_client_provider_lib",
    srcs = [
        ":aws_kms_aead.cc",
        ":nontee_aws_kms_client_provider.cc",
    ],
    hdrs = [
        ":aws_kms_aead.h",
        ":nontee_aws_kms_client_provider.h",
        ":nontee_error_codes.h",
    ],
    deps = [
        "//scp/cc/core/async_executor/src/aws:core_aws_async_executor_lib",
        "//scp/cc/core/common/uuid/src:uuid_lib",
        "//scp/cc/core/interface:async_context_lib",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/utils/src:core_utils",
        "//scp/cc/cpio/client_providers/interface:cpio_client_providers_interface_lib",
        "//scp/cc/cpio/common/src/aws:aws_utils_lib",
        "//scp/cc/public/cpio/interface:cpio_errors",
        "//scp/cc/public/cpio/interface/kms_client:type_def",
        "@aws_sdk_cpp//:kms",
        "@tink_cc",
    ],
)

cc_library(
    name = "tee_aws_kms_client_provider_lib",
    srcs = [
        ":tee_aws_kms_client_provider.cc",
        ":tee_aws_kms_client_provider_utils.cc",
    ],
    hdrs = [
        ":tee_aws_kms_client_provider.h",
        ":tee_aws_kms_client_provider_utils.h",
        ":tee_error_codes.h",
    ],
    defines = [
        'AWS_NITRO_ENCLAVES_CLI_PATH=\\"{path}{filename}\\"'.format(
            filename = aws_nitro_enclaves_cli_name,
            path = "/",
        ),
    ],
    deps = [
        "//scp/cc/core/common/uuid/src:uuid_lib",
        "//scp/cc/core/interface:async_context_lib",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/utils/src:core_utils",
        "//scp/cc/cpio/client_providers/interface:cpio_client_providers_interface_lib",
        "//scp/cc/cpio/common/src/aws:aws_utils_lib",
        "//scp/cc/public/cpio/interface:cpio_errors",
        "//scp/cc/public/cpio/interface/kms_client:type_def",
        "@aws_sdk_cpp//:kms",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
        "@tink_cc",
    ],
)

exports_files([
    "aws_kms_aead.h",
    "aws_kms_aead.cc",
    "nontee_aws_kms_client_provider.h",
    "nontee_aws_kms_client_provider.cc",
    "nontee_error_codes.h",
    "tee_aws_kms_client_provider.h",
    "tee_aws_kms_client_provider.cc",
    "tee_aws_kms_client_provider_utils.h",
    "tee_aws_kms_client_provider_utils.cc",
    "tee_error_codes.h",
])
