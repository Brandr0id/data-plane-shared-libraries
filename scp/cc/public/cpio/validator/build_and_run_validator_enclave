#!/usr/bin/env bash

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o pipefail
set -o errexit

declare -i SAVE_EIF=0

function usage() {
  declare -r -i exitval=${1-1}
  cat >&2 << USAGE
usage:
  $0 <options>
    --docker-image-uri <string>   Docker image uri (from tarfile)
    --validator-conf <file>       Validator config text proto file with path
    --save-eif                    Whether the created eif should be cached for
                                  subsequent use. Default: false
USAGE
  # shellcheck disable=SC2086
  exit "${exitval}"
}

trap cleanup EXIT
function cleanup() {
  local -r -i status=$?
  if [[ -f ${ENCLAVE_NAME}.eif ]] && [[ ${SAVE_EIF} -eq 0 ]]; then
    rm -f "${ENCLAVE_NAME}".eif
  fi
  if ! nitro-cli terminate-enclave --enclave-name "${ENCLAVE_NAME}" >/dev/null; then
    printf "error: Unable to terminate enclave %s\n" "${ENCLAVE_NAME}" &>/dev/stderr
  fi
  exit "${status}"
}

while [[ $# -gt 0 ]]; do
  case "$1" in
    --docker-image-uri)
      DOCKER_IMAGE_URI="$2"
      shift 2 || usage
      ;;
    --validator-conf)
      VALIDATOR_CONFIG_PATH="$2"
      shift 2 || usage
      ;;
    --save-eif)
      SAVE_EIF=1
      shift
      ;;
    -h | --help) usage 0 ;;
    *) usage ;;
  esac
done

: "${DOCKER_IMAGE_URI?"--docker-image-uri not specified"}"
: "${VALIDATOR_CONFIG_PATH?"--validator-conf not specified"}"

if ! [[ -f ${VALIDATOR_CONFIG_PATH} ]]; then
  echo "Validator config text proto not found!"
  usage 0
fi

VALIDATOR_HASH=$({ cat "${VALIDATOR_CONFIG_PATH}"; } | sha256sum | cut --delimiter=" " --fields=1)
readonly VALIDATOR_HASH
declare -r ENCLAVE_NAME=cpio_validator_"${VALIDATOR_HASH}"


RESOLV_CONF_TMPFILE="$(mktemp)"
readonly RESOLV_CONF_TMPFILE
cat <<EOF >"${RESOLV_CONF_TMPFILE}"
; use-vc forces use of TCP for DNS resolutions.
; See https://man7.org/linux/man-pages/man5/resolv.conf.5.html
options use-vc timeout:2 attempts:5
search ec2.internal
nameserver 8.8.8.8
nameserver 8.8.4.4
nameserver 1.1.1.1
EOF

if ! [[ -f ${ENCLAVE_NAME}.eif ]]; then
  CONTAINER_NAME=$(mktemp --dry-run cpio-validator-XXX)
  docker create --name "${CONTAINER_NAME}" "${DOCKER_IMAGE_URI}" >/dev/null
  docker cp "${VALIDATOR_CONFIG_PATH}" "${CONTAINER_NAME}":/etc/validator_config.txtpb
  docker cp "${RESOLV_CONF_TMPFILE}" "${CONTAINER_NAME}":/etc/resolv_override.conf
  docker commit "${CONTAINER_NAME}" "${DOCKER_IMAGE_URI}" >/dev/null
  docker rm "${CONTAINER_NAME}" >/dev/null
  nitro-cli build-enclave --docker-uri "${DOCKER_IMAGE_URI}" --output-file "${ENCLAVE_NAME}".eif >/dev/null
fi

if ! nitro-cli run-enclave --cpu-count 2 --memory 1708 --eif-path "${ENCLAVE_NAME}".eif \
  --enclave-name "${ENCLAVE_NAME}" --enclave-cid 10 --debug-mode >/dev/null; then
  printf "error: Unable to run enclave %s\n" "${ENCLAVE_NAME}" &>/dev/stderr
fi

if ! nitro-cli console --enclave-name "${ENCLAVE_NAME}" | grep -E '^\[ (SUCCESS|FAILURE)'; then
  printf "error: Unable to read from console of enclave %s\n" "${ENCLAVE_NAME}" &>/dev/stderr
fi
