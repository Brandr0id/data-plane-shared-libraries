# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "roma_service_lib",
    hdrs = [
        "error_codes.h",
        "roma_service.h",
    ],
    deps = [
        "//scp/cc:cc_base_include_dir",
        "//scp/cc/core/async_executor/src:core_async_executor_lib",
        "//scp/cc/core/interface:interface_lib",
        "//scp/cc/core/interface:type_def_lib",
        "//scp/cc/core/os/src/linux:system_resource_info_provider_linux_lib",
        "//scp/cc/public/core/interface:execution_result",
        "//scp/cc/roma/logging/src:roma_logging_lib",
        "//scp/cc/roma/sandbox/dispatcher/src:roma_dispatcher_lib",
        "//scp/cc/roma/sandbox/native_function_binding/src:roma_native_function_handler_sapi_ipc_lib",
        "//scp/cc/roma/sandbox/worker_api/src:roma_worker_api_sapi_lib",
        "//scp/cc/roma/sandbox/worker_pool/src:roma_worker_pool_lib",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_test(
    name = "buffer_size_test",
    size = "medium",
    srcs = ["buffer_size_test.cc"],
    tags = [
        "noasan",  # TODO(b/293876281) - Fix ASAN errors in this test.
        "notsan",  # TODO(b/307540489) - Fix TSAN errors in this test.
        "noubsan",  # TODO(b/307540489) - Fix UBSAN errors in this test.
    ],
    deps = [
        ":roma_service_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/roma/interface:roma_interface_lib",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "function_binding_test",
    size = "medium",
    srcs = ["function_binding_test.cc"],
    tags = [
        "noasan",  # TODO(b/293876281) - Fix ASAN errors in this test.
        "notsan",  # TODO(b/307540489) - Fix TSAN errors in this test.
        "noubsan",  # TODO(b/307540489) - Fix UBSAN errors in this test.
    ],
    deps = [
        ":roma_service_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/roma/interface:roma_interface_lib",
        "@com_google_absl//absl/log:scoped_mock_log",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "metadata_test",
    size = "large",
    srcs = ["metadata_test.cc"],
    tags = [
        "noasan",  # TODO(b/293876281) - Fix ASAN errors in this test.
        "notsan",  # TODO(b/307540489) - Fix TSAN errors in this test.
        "noubsan",  # TODO(b/307540489) - Fix UBSAN errors in this test.
    ],
    deps = [
        ":roma_service_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/roma/interface:roma_interface_lib",
        "@com_google_absl//absl/log:scoped_mock_log",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "sandboxed_service_test",
    size = "large",
    srcs = ["sandboxed_service_test.cc"],
    tags = [
        "noasan",  # TODO(b/293876281) - Fix ASAN errors in this test.
        "notsan",  # TODO(b/307540489) - Fix TSAN errors in this test.
        "noubsan",  # TODO(b/307540489) - Fix UBSAN errors in this test.
    ],
    deps = [
        ":roma_service_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/roma/interface:roma_interface_lib",
        "//src/cpp/util:duration",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "wasm_test",
    size = "large",
    srcs = ["wasm_test.cc"],
    data = [
        "//scp/cc/roma/testing/cpp_wasm_allocate_memory",
        "//scp/cc/roma/testing/cpp_wasm_hello_world_example",
        "//scp/cc/roma/testing/cpp_wasm_string_in_string_out_example",
    ],
    tags = [
        "noasan",  # TODO(b/293876281) - Fix ASAN errors in this test.
        "notsan",  # TODO(b/307540489) - Fix TSAN errors in this test.
        "noubsan",  # TODO(b/307540489) - Fix UBSAN errors in this test.
    ],
    deps = [
        ":roma_service_lib",
        "//scp/cc/core/test/utils:utils_lib",
        "//scp/cc/roma/interface:roma_interface_lib",
        "//scp/cc/roma/wasm/test:roma_wasm_testing_lib",
        "@com_google_absl//absl/log:scoped_mock_log",
        "@com_google_absl//absl/synchronization",
        "@com_google_googletest//:gtest_main",
    ],
)
