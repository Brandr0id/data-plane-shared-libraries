diff --git a/build_defs/cc/aws/aws_sdk_cpp_source_code.BUILD b/build_defs/cc/aws/aws_sdk_cpp_source_code.BUILD
index 4848df8..d139a98 100644
--- a/build_defs/cc/aws/aws_sdk_cpp_source_code.BUILD
+++ b/build_defs/cc/aws/aws_sdk_cpp_source_code.BUILD
@@ -274,3 +274,57 @@ genrule(
     ],
     cmd_bash = "touch '$@'",
 )
+
+cc_library(
+    name = "transfer",
+    srcs = glob([
+        "aws-cpp-sdk-transfer/source/transfer/*.cpp",  # TRANSFER_SOURCE
+    ]),
+    hdrs = glob([
+        "aws-cpp-sdk-transfer/include/aws/transfer/*.h",  # TRANSFER_HEADERS
+    ]),
+    includes = [
+        "aws-cpp-sdk-transfer/include",
+    ],
+    deps = [
+        ":core",
+        ":s3",
+    ],
+)
+
+cc_library(
+    name = "kinesis",
+    srcs = glob([
+        "aws-cpp-sdk-kinesis/source/*.cpp",  # AWS_KINESIS_SOURCE
+        "aws-cpp-sdk-kinesis/source/model/*.cpp",  # AWS_KINESIS_MODEL_SOURCE
+    ]),
+    hdrs = glob([
+        "aws-cpp-sdk-kinesis/include/aws/kinesis/*.h",  # AWS_KINESIS_HEADERS
+        "aws-cpp-sdk-kinesis/include/aws/kinesis/model/*.h",  # AWS_KINESIS_MODEL_HEADERS
+    ]),
+    includes = [
+        "aws-cpp-sdk-kinesis/include",
+    ],
+    deps = [
+        ":core",
+    ],
+)
+
+cc_library(
+    name = "sns",
+    srcs = glob([
+        "aws-cpp-sdk-sns/source/*.cpp",  # AWS_SNS_SOURCE
+        "aws-cpp-sdk-sns/source/model/*.cpp",  # AWS_SNS_MODEL_SOURCE
+    ]),
+    hdrs = glob([
+        "aws-cpp-sdk-sns/include/aws/sns/*.h",  # AWS_SNS_HEADERS
+        "aws-cpp-sdk-sns/include/aws/sns/model/*.h",  # AWS_SNS_MODEL_HEADERS
+    ]),
+    includes = [
+        "aws-cpp-sdk-sns/include",
+    ],
+    deps = [
+        ":core",
+    ],
+)
+
diff --git a/build_defs/cc/aws/aws_sdk_cpp_source_code_deps.bzl b/build_defs/cc/aws/aws_sdk_cpp_source_code_deps.bzl
index 1bdbf81..9b1644e 100644
--- a/build_defs/cc/aws/aws_sdk_cpp_source_code_deps.bzl
+++ b/build_defs/cc/aws/aws_sdk_cpp_source_code_deps.bzl
@@ -15,14 +15,14 @@
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
 
-def import_aws_sdk_cpp():
+def import_aws_sdk_cpp(scp_repo_name = ""):
     """
     Import AWS SDK CPP source code
     """
     maybe(
         http_archive,
         name = "aws_checksums",
-        build_file = Label("//build_defs/cc/aws:aws_checksums.BUILD"),
+        build_file = Label(scp_repo_name + "//build_defs/cc/aws:aws_checksums.BUILD"),
         sha256 = "6e6bed6f75cf54006b6bafb01b3b96df19605572131a2260fddaf0e87949ced0",
         strip_prefix = "aws-checksums-0.1.5",
         urls = [
@@ -44,7 +44,7 @@ def import_aws_sdk_cpp():
     maybe(
         http_archive,
         name = "aws_sdk_cpp",
-        build_file = Label("//build_defs/cc/aws:aws_sdk_cpp_source_code.BUILD"),
+        build_file = Label(scp_repo_name + "//build_defs/cc/aws:aws_sdk_cpp_source_code.BUILD"),
         patch_cmds = [
             """sed -i.bak 's/UUID::RandomUUID/Aws::Utils::UUID::RandomUUID/g' aws-cpp-sdk-core/source/client/AWSClient.cpp""",
             # Apply fix in https://github.com/aws/aws-sdk-cpp/commit/9669a1c1d9a96621cd0846679cbe973c648a64b3
diff --git a/build_defs/cc/sdk_common.bzl b/build_defs/cc/sdk_common.bzl
index 4abcb8c..ed9a748 100644
--- a/build_defs/cc/sdk_common.bzl
+++ b/build_defs/cc/sdk_common.bzl
@@ -12,7 +12,6 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-load("//build_defs/shared:protobuf.bzl", "protobuf")
 load("//build_defs/shared:absl.bzl", "absl")
 load("//build_defs/shared:bazel_rules_pkg.bzl", "bazel_rules_pkg")
 load("//build_defs/shared:bazel_rules_java.bzl", "bazel_rules_java")
@@ -30,7 +29,7 @@ load("//build_defs/cc/shared:google_cloud_cpp.bzl", "import_google_cloud_cpp")
 load("//build_defs/tink:tink_defs.bzl", "import_tink_git")
 load("//build_defs/shared:java_grpc.bzl", "java_grpc")
 
-def sdk_common(protobuf_version, protobuf_repo_hash):
+def sdk_common():
     absl()
     bazel_docker_rules()
     bazel_rules_cpp()
@@ -45,6 +44,5 @@ def sdk_common(protobuf_version, protobuf_repo_hash):
     grpc()
     java_grpc()
     nghttp2()
-    protobuf(protobuf_version, protobuf_repo_hash)
     import_google_cloud_cpp()
     import_tink_git()
diff --git a/build_defs/cc/sdk_source_code.bzl b/build_defs/cc/sdk_source_code.bzl
index 7065a52..baa2cd2 100644
--- a/build_defs/cc/sdk_source_code.bzl
+++ b/build_defs/cc/sdk_source_code.bzl
@@ -17,8 +17,10 @@ load("//build_defs/cc/aws:aws_sdk_cpp_source_code_deps.bzl", "import_aws_sdk_cpp
 load("//build_defs/cc/aws:aws_nitro_enclaves_sdk_source_code_deps.bzl", "import_aws_nitro_enclaves_sdk")
 load("//build_defs/cc:sdk_common.bzl", "sdk_common")
 
-def sdk_dependencies(protobuf_version, protobuf_repo_hash):
-    sdk_common(protobuf_version, protobuf_repo_hash)
+def sdk_dependencies():
+    sdk_common()
     aws_c_common()
+
+def sdk_dependencies2():
     import_aws_sdk_cpp()
-    import_aws_nitro_enclaves_sdk()
+    import_aws_nitro_enclaves_sdk()
\ No newline at end of file
diff --git a/build_defs/cc/shared/bazel_rules_cpp.bzl b/build_defs/cc/shared/bazel_rules_cpp.bzl
index 53fb88f..698516d 100644
--- a/build_defs/cc/shared/bazel_rules_cpp.bzl
+++ b/build_defs/cc/shared/bazel_rules_cpp.bzl
@@ -20,16 +20,18 @@ def bazel_rules_cpp():
     maybe(
         http_archive,
         name = "rules_cc",
-        sha256 = "b295cad8c5899e371dde175079c0a2cdc0151f5127acc92366a8c986beb95c76",
-        strip_prefix = "rules_cc-daf6ace7cfeacd6a83e9ff2ed659f416537b6c74",
-        urls = ["https://github.com/bazelbuild/rules_cc/archive/daf6ace7cfeacd6a83e9ff2ed659f416537b6c74.zip"],
+        sha256 = "3d9e271e2876ba42e114c9b9bc51454e379cbf0ec9ef9d40e2ae4cec61a31b40",
+        strip_prefix = "rules_cc-0.0.6",
+        urls = [
+            "https://github.com/bazelbuild/rules_cc/releases/download/0.0.6/rules_cc-0.0.6.tar.gz",
+        ],
     )
-
     maybe(
-        git_repository,
+        http_archive,
         name = "rules_foreign_cc",
-        # version 0.8.0
-        commit = "e208deeae394c2aba5531d1f4edbba82d2e7430c",
-        remote = "https://github.com/bazelbuild/rules_foreign_cc.git",
-        shallow_since = "1650286188 -0700",
+        sha256 = "2a4d07cd64b0719b39a7c12218a3e507672b82a97b98c6a89d38565894cf7c51",
+        strip_prefix = "rules_foreign_cc-0.9.0",
+        urls = [
+            "https://github.com/bazelbuild/rules_foreign_cc/archive/refs/tags/0.9.0.tar.gz",
+        ],
     )
diff --git a/build_defs/cc/shared/boringssl.bzl b/build_defs/cc/shared/boringssl.bzl
index d811337..05a5eb9 100644
--- a/build_defs/cc/shared/boringssl.bzl
+++ b/build_defs/cc/shared/boringssl.bzl
@@ -12,15 +12,15 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
 
 def boringssl():
     maybe(
-        git_repository,
+        # Commit from 2023-02-15.
+        http_archive,
         name = "boringssl",
-        # Committed on Oct 3, 2022
-        # https://github.com/google/boringssl/commit/c2837229f381f5fcd8894f0cca792a94b557ac52
-        commit = "c2837229f381f5fcd8894f0cca792a94b557ac52",
-        remote = "https://github.com/google/boringssl.git",
+        strip_prefix = "boringssl-5c22014ca513807ed03c657e8ede076164663979",
+        url = "https://github.com/google/boringssl/archive/5c22014ca513807ed03c657e8ede076164663979.zip",
+        sha256 = "863fc670c456f30923740c1639305132fdfb9d1b25ba385a67ae3862ef12a8af",
     )
diff --git a/build_defs/cc/shared/cc_utils.bzl b/build_defs/cc/shared/cc_utils.bzl
index b4967de..d1b9a43 100644
--- a/build_defs/cc/shared/cc_utils.bzl
+++ b/build_defs/cc/shared/cc_utils.bzl
@@ -24,6 +24,7 @@ def cc_utils():
         # Commits on Apr 6, 2022
         commit = "15fa6a342af7b51cb51a22599026e01f1d81957b",
         remote = "https://github.com/nlohmann/json.git",
+        shallow_since = "1649251595 +0200",
     )
 
     maybe(
diff --git a/build_defs/cc/shared/nghttp2.bzl b/build_defs/cc/shared/nghttp2.bzl
index 02e3b9e..f10171b 100644
--- a/build_defs/cc/shared/nghttp2.bzl
+++ b/build_defs/cc/shared/nghttp2.bzl
@@ -15,6 +15,29 @@
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
 
+def pre_nghttp2():
+    maybe(
+        http_archive,
+        name = "madler_zlib",
+        build_file = Label("//build_defs/cc/shared/build_targets:zlib.BUILD"),
+        sha256 = "d233fca7cf68db4c16dc5287af61f3cd01ab62495224c66639ca3da537701e42",
+        strip_prefix = "zlib-1.2.13",
+        urls = [
+            "https://github.com/madler/zlib/releases/download/v1.2.13/zlib1213.zip"
+        ],
+    )
+    maybe(
+        http_archive,
+        name = "libxml2",
+        build_file = Label("//build_defs/cc/shared/build_targets:libxml2.BUILD"),
+        patches = [Label("//build_defs/cc/shared/build_targets:libxml2.patch")],
+        sha256 = "c8d6681e38c56f172892c85ddc0852e1fd4b53b4209e7f4ebf17f7e2eae71d92",
+        strip_prefix = "libxml2-2.9.12",
+        urls = [
+            "http://xmlsoft.org/sources/libxml2-2.9.12.tar.gz",
+        ],
+    )
+
 def nghttp2():
     maybe(
         http_archive,
diff --git a/build_defs/cc/shared/rules_boost.patch b/build_defs/cc/shared/rules_boost.patch
index a74e34e..7614b1f 100644
--- a/build_defs/cc/shared/rules_boost.patch
+++ b/build_defs/cc/shared/rules_boost.patch
@@ -15,7 +15,7 @@ diff --git a/boost/boost.bzl b/boost/boost.bzl
 index ff1630f..c483268 100644
 --- a/boost/boost.bzl
 +++ b/boost/boost.bzl
-@@ -219,10 +219,10 @@ def boost_deps():
+@@ -219,10 +219,3 @@ def boost_deps():
          ],
      )
  
@@ -26,10 +26,3 @@ index ff1630f..c483268 100644
 -        strip_prefix = "boringssl-fc44652a42b396e1645d5e72aba053349992136a",
 -        url = "https://github.com/google/boringssl/archive/fc44652a42b396e1645d5e72aba053349992136a.tar.gz",
 -    )
-+#     maybe(
-+#         http_archive,
-+#         name = "openssl",
-+#         sha256 = "6f640262999cd1fb33cf705922e453e835d2d20f3f06fe0d77f6426c19257308",
-+#         strip_prefix = "boringssl-fc44652a42b396e1645d5e72aba053349992136a",
-+#         url = "https://github.com/google/boringssl/archive/fc44652a42b396e1645d5e72aba053349992136a.tar.gz",
-+#     )
diff --git a/build_defs/cc/v8.bzl b/build_defs/cc/v8.bzl
index d9e150e..35f6807 100644
--- a/build_defs/cc/v8.bzl
+++ b/build_defs/cc/v8.bzl
@@ -13,7 +13,7 @@
 # limitations under the License.
 
 load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")
-load("@rules_python//python:pip.bzl", "pip_install")
+load("@rules_python//python:pip.bzl", "pip_parse")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
 
 def import_v8(scp_repo_name = ""):
@@ -28,10 +28,10 @@ def import_v8(scp_repo_name = ""):
         patches = [scp_repo_name + "//build_defs/cc:v8.patch"],
     )
 
-    pip_install(
+    pip_parse(
         name = "v8_python_deps",
         extra_pip_args = ["--require-hashes"],
-        requirements = "@v8//:bazel/requirements.txt",
+        requirements_lock = "@v8//:bazel/requirements.txt",
     )
 
     new_git_repository(
diff --git a/build_defs/shared/absl.bzl b/build_defs/shared/absl.bzl
index 08d29e6..c4ac383 100644
--- a/build_defs/shared/absl.bzl
+++ b/build_defs/shared/absl.bzl
@@ -24,17 +24,19 @@ def absl():
     maybe(
         http_archive,
         name = "bazel_skylib",
-        sha256 = "f7be3474d42aae265405a592bb7da8e171919d74c16f082a5457840f06054728",
-        urls = ["https://github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz"],
+        sha256 = "b8a1527901774180afc798aeb28c4634bdccf19c4d98e7bdd1ce79d1fe9aaad7",
+        urls = [
+            "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz",
+            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.4.1/bazel-skylib-1.4.1.tar.gz",
+        ],
     )
-
     maybe(
         http_archive,
         name = "com_google_absl",
-        sha256 = "81311c17599b3712069ded20cca09a62ab0bf2a89dfa16993786c8782b7ed145",
-        strip_prefix = "abseil-cpp-20230125.1",
-        # Committed on Jan 25, 2023.
+        sha256 = "51d676b6846440210da48899e4df618a357e6e44ecde7106f1e44ea16ae8adc7",
+        strip_prefix = "abseil-cpp-20230125.3",
+        # Committed on May 4, 2023
         urls = [
-            "https://github.com/abseil/abseil-cpp/archive/20230125.1.tar.gz",
+            "https://github.com/abseil/abseil-cpp/archive/refs/tags/20230125.3.zip",
         ],
     )
diff --git a/build_defs/shared/bazel_docker_rules.bzl b/build_defs/shared/bazel_docker_rules.bzl
index 659ce26..96281a5 100644
--- a/build_defs/shared/bazel_docker_rules.bzl
+++ b/build_defs/shared/bazel_docker_rules.bzl
@@ -12,7 +12,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
 
 # Note: these rules add a dependency on the golang toolchain and must be ordered
@@ -23,7 +23,6 @@ def bazel_docker_rules():
     maybe(
         http_archive,
         name = "io_bazel_rules_docker",
-        sha256 = "59d5b42ac315e7eadffa944e86e90c2990110a1c8075f1cd145f487e999d22b3",
-        strip_prefix = "rules_docker-0.17.0",
-        urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.17.0/rules_docker-v0.17.0.tar.gz"],
+        sha256 = "b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf",
+        urls = ["https://github.com/bazelbuild/rules_docker/releases/download/v0.25.0/rules_docker-v0.25.0.tar.gz"],
     )
diff --git a/build_defs/shared/bazel_rules_pkg.bzl b/build_defs/shared/bazel_rules_pkg.bzl
index 7353b6f..40ee3aa 100644
--- a/build_defs/shared/bazel_rules_pkg.bzl
+++ b/build_defs/shared/bazel_rules_pkg.bzl
@@ -19,9 +19,9 @@ def bazel_rules_pkg():
     maybe(
         http_archive,
         name = "rules_pkg",
-        sha256 = "a89e203d3cf264e564fcb96b6e06dd70bc0557356eb48400ce4b5d97c2c3720d",
+        sha256 = "8f9ee2dc10c1ae514ee599a8b42ed99fa262b757058f65ad3c384289ff70c4b8",
         urls = [
-            "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.5.1/rules_pkg-0.5.1.tar.gz",
-            "https://github.com/bazelbuild/rules_pkg/releases/download/0.5.1/rules_pkg-0.5.1.tar.gz",
+            "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz",
+            "https://github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz",
         ],
     )
diff --git a/build_defs/shared/golang.bzl b/build_defs/shared/golang.bzl
index 05bae65..401f328 100644
--- a/build_defs/shared/golang.bzl
+++ b/build_defs/shared/golang.bzl
@@ -23,13 +23,12 @@ def go_deps():
     maybe(
         http_archive,
         name = "io_bazel_rules_go",
-        sha256 = "f2dcd210c7095febe54b804bb1cd3a58fe8435a909db2ec04e31542631cf715c",
+        sha256 = "6dc2da7ab4cf5d7bfc7c949776b1b7c733f05e56edc4bcd9022bb249d2e2a996",
         urls = [
-            "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.31.0/rules_go-v0.31.0.zip",
-            "https://github.com/bazelbuild/rules_go/releases/download/v0.31.0/rules_go-v0.31.0.zip",
+            "https://mirror.bazel.build/github.com/bazelbuild/rules_go/releases/download/v0.39.1/rules_go-v0.39.1.zip",
+            "https://github.com/bazelbuild/rules_go/releases/download/v0.39.1/rules_go-v0.39.1.zip",
         ],
     )
-
     maybe(
         http_archive,
         name = "bazel_gazelle",
diff --git a/build_defs/shared/grpc.bzl b/build_defs/shared/grpc.bzl
index 781666d..ba68273 100644
--- a/build_defs/shared/grpc.bzl
+++ b/build_defs/shared/grpc.bzl
@@ -23,9 +23,9 @@ def grpc():
     maybe(
         http_archive,
         name = "com_github_grpc_grpc",
-        sha256 = "ec125d7fdb77ecc25b01050a0d5d32616594834d3fe163b016768e2ae42a2df6",
-        strip_prefix = "grpc-1.52.1",
+        sha256 = "8f01dac5a32104acbb76db1e6b447dc5b3dc738cb9bceeee01843d9d01d1d788",
+        strip_prefix = "grpc-1.54.1",
         urls = [
-            "https://github.com/grpc/grpc/archive/v1.52.1.tar.gz",
+            "https://github.com/grpc/grpc/archive/refs/tags/v1.54.1.zip",
         ],
     )
diff --git a/cc/aws/proxy/src/proxify.cc b/cc/aws/proxy/src/proxify.cc
index 70c9334..cf986a9 100644
--- a/cc/aws/proxy/src/proxify.cc
+++ b/cc/aws/proxy/src/proxify.cc
@@ -29,11 +29,15 @@ static constexpr char socket_vendor[] = "socket_vendor";
 static constexpr char resolv_conf_path[] = "/etc/resolv.conf";
 static constexpr char use_vc_option[] = "use-vc";
 
-static const char resolv_conf_content[] =
-    "nameserver 8.8.8.8\n"
-    "nameserver 8.8.4.4\n"
-    "nameserver 1.1.1.1\n"
-    "options use-vc";
+static const char resolv_conf_content[] = R"resolv(
+; use-vc forces use of TCP for DNS resolutions.
+; See https://man7.org/linux/man-pages/man5/resolv.conf.5.html
+options use-vc timeout:2 attempts:5
+search ec2.internal
+; Ip of AWS DNS resolver located at base of VPC IPV4 network range, plus two.
+; See https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#AmazonDNS
+nameserver 10.0.0.2
+)resolv";
 
 int main(int argc, char* argv[]) {
   std::string exe = argv[0];
@@ -70,7 +74,7 @@ int main(int argc, char* argv[]) {
   // Run the socket_vendor. If there's already a running socket_vendor, this
   // will end with a benign failure.
   if (fork() == 0) {
-    daemon(1, 1);
+    daemon(1, 0);
     execl(socket_vendor_path.c_str(), socket_vendor_path.c_str(), nullptr);
     exit(1);
   }
